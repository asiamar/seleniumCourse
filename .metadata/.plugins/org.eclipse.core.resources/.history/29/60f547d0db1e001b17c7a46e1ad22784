import java.util.List;
import java.util.stream.Collectors;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;

public class filter_in_sellenioum118 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		System.setProperty("webdriver.chrome.driver", "C:\\Users\\jmariasik\\work\\chromedriver.exe");

		WebDriver driver=new ChromeDriver();
		//przypadek1
		//sprawdzanie czy po kliknieciu na sortowanie, dane sa posortowane
		//click on column
		//capture all webelements into list (original list)
		//sort on the original in the list of step above ->sorted list
		driver.get("https://rahulshettyacademy.com/seleniumPractise/#/offers");
		

		driver.findElement(By.xpath("//tr/th[1]")).click();
		List <WebElement> elementList = driver.findElements(By.xpath("//tr/td[1]"));
		List <String> originalList =  elementList.stream().map(s->s.getText()).collect(Collectors.toList());
		List <String> listaposortowana = originalList.stream().sorted().collect(Collectors.toList());

		Assert.assertTrue(listaposortowana.equals(originalList));
		
		//przypadek2
		//chcemy zwróciæ cene fasoli, trzeba zrobiæ liste warzyw z kolumny pierwszej i wyfiltrowac po s³owie Beans, a nastepnie nowa metoda dostac sie do ceny
		
		List <String> price = elementList.stream().filter(s->s.getText().contains("Beans")).map(s->getVeggiePrice(s)).collect(Collectors.toList());
		price.forEach(a->System.out.println(a));
	}

	private static String getVeggiePrice (WebElement s) {
		String pricevalue = s.findElement(By.xpath("following-sibling::td[1]")).getText();
		return pricevalue;
	}
	
	
}
